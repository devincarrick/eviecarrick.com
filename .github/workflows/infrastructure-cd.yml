name: Infrastructure CD

on:
  push:
    branches:
      - main
    paths:
      - "infrastructure/**"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  AWS_REGION: us-east-1

permissions:
  id-token: write
  contents: write
  issues: write

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    defaults:
      run:
        working-directory: ./infrastructure

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: us-east-1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: infrastructure/package-lock.json

      - name: Install dependencies
        run: |
          npm ci
          npm install -g ts-node typescript @types/node

      - name: Deploy with CDK
        id: deploy
        run: |
          STAGE="${{ github.event.inputs.environment || 'dev' }}"
          STACK_NAME="InfrastructureStack"
          echo "stack_name=${STACK_NAME}" >> $GITHUB_OUTPUT
          npm run cdk deploy -- \
            --context stage=$STAGE \
            --require-approval never

      - name: Run post-deployment validation
        env:
          AWS_REGION: us-east-1
          NODE_ENV: production
          STACK_NAME: "PortfolioInfraStack"
        run: |
          echo "Starting deployment validation..."
          echo "Using stack name: $STACK_NAME"
          npm run validate-deployment || {
            echo "Validation failed with exit code $?"
            exit 1
          }

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Deployment failed: ${{ github.event.inputs.environment || 'dev' }}`,
              body: `Deployment to ${{ github.event.inputs.environment || 'dev' }} failed.\nWorkflow: ${context.workflow}\nRun: ${context.runId}`
            }
            await github.rest.issues.create(issue)
