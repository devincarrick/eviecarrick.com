name: Website Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'website/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

permissions:
  id-token: write
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./website
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: website/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Build website
        run: npm run build
        
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: website-build
          path: website/dist
          
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: us-east-1

      - name: Debug OIDC claims
        run: |
          echo "GitHub SHA: ${{ github.sha }}"
          echo "GitHub ref: ${{ github.ref }}"
          echo "GitHub repository: ${{ github.repository }}"
          
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: website-build
          path: dist
          
      - name: Deploy to S3
        run: |
          STAGE="${{ github.event.inputs.environment || 'dev' }}"
          BUCKET_NAME="portfolio-${STAGE}-${{ secrets.AWS_ACCOUNT_ID }}"
          aws s3 sync dist "s3://${BUCKET_NAME}" \
            --delete \
            --cache-control "max-age=31536000,public" \
            --exclude "*.html" \
            --exclude "*.json"
            
          # Deploy HTML and JSON files with different cache settings
          aws s3 sync dist "s3://${BUCKET_NAME}" \
            --delete \
            --cache-control "no-cache" \
            --include "*.html" \
            --include "*.json"
            
      - name: Invalidate CloudFront
        run: |
          STAGE="${{ github.event.inputs.environment || 'dev' }}"
          DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
            --stack-name "PortfolioInfraStack" \
            --query "Stacks[0].Outputs[?OutputKey=='${STAGE}DistributionDomainName'].OutputValue" \
            --output text)
          
          # Add debug output
          echo "Distribution ID: $DISTRIBUTION_ID"
          
          aws cloudfront create-invalidation \
            --distribution-id "$DISTRIBUTION_ID" \
            --paths "/*"
