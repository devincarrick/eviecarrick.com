name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      component:
        description: 'Component to deploy'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - website
          - infrastructure

jobs:
  infrastructure:
    if: github.event.inputs.component == 'infrastructure' || github.event.inputs.component == 'all'
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
        aws-region: us-east-1

    - name: Deploy Infrastructure
      run: |
        STAGE="${{ github.event.inputs.environment || 'dev' }}"
        cd infrastructure
        npm ci
        npm run cdk deploy -- \
          --context stage=$STAGE \
          --require-approval never

  website:
    if: github.event.inputs.component == 'website' || github.event.inputs.component == 'all'
    runs-on: ubuntu-latest
    needs: [infrastructure]
    environment:
      name: ${{ github.event.inputs.environment || 'dev' }}
    defaults:
      run:
        working-directory: website
    
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: website/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build
      env:
        NODE_ENV: production

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
        aws-region: us-east-1

    - name: Deploy to S3
      run: |
        BUCKET_NAME="${{ github.event.inputs.environment || 'dev' }}-eviecarrick-portfolio"
        aws s3 sync dist/ s3://$BUCKET_NAME --delete

    - name: Invalidate CloudFront
      run: |
        DISTRIBUTION_ID="${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
        aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"

  notify:
    needs: [website]
    if: github.event.inputs.environment == 'prod'
    runs-on: ubuntu-latest
    steps:
    - name: Notify on Production Deployment
      uses: actions/github-script@v7
      with:
        script: |
          const message = `ðŸš€ Production deployment completed
          
          - Commit: ${context.sha}
          - Workflow: ${context.workflow}
          - Run: ${context.runId}
          - Components: ${{ github.event.inputs.component || 'all' }}
          
          View the site at: https://eviecarrick.com`;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "Production Deployment Complete",
            body: message,
            labels: ["deployment"]
          }); 